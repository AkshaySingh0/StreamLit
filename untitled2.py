# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XH0GoSb9mflNM5riSQfdrfqjqYN6xmrP
"""

import numpy as np
import tensorflow as tf

import tensorflow as tf
import keras

import numpy as np
import matplotlib.pyplot as plt

fashion_mnist = tf.keras.datasets.fashion_mnist

(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data()

class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

plt.figure()
plt.imshow(train_images[0])
plt.colorbar()
plt.grid(False)
plt.show()

train_images = train_images / 255.0

test_images = test_images / 255.0

plt.figure(figsize=(10,10))
for i in range(25):
    plt.subplot(5,5,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(train_images[i], cmap=plt.cm.binary)
    plt.xlabel(class_names[train_labels[i]])
plt.show()

model = tf.keras.Sequential([
    tf.keras.layers.Flatten(input_shape=(28, 28)),
    tf.keras.layers.Dense(128, activation='relu'),
    tf.keras.layers.Dense(10)
])

model.compile(optimizer='adam',
              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=10)

test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=2)

print('\nTest accuracy:', test_acc)

probability_model = tf.keras.Sequential([model,
                                         tf.keras.layers.Softmax()])



predictions = probability_model.predict(test_images)

np.argmax(predictions[0])

from PIL import Image
from numpy import asarray

img1 = Image.open('/content/download.jpeg')

img1 = img1.resize((28,28))
    #convert rgb to grayscale
img1 = img1.convert('L')
img1 = np.array(img)
    #reshaping to support our model input and normalizing
img1 = img1.reshape(1,28,28,1)
img1 = img1/255.0

predictions1 = probability_model.predict(img1)

p = np.argmax(predictions1)
if p == 5 :
  print('https://www.zara.com/in/en/man-outerwear-l715.html')

import pickle
pickle.dump(model,open('model.pkl','wb'))

